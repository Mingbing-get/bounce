@use 'sass:math';

:root {
  --bounce-translate-x: 100px;
  --bounce-translate-y: 100px;
  --bounce-rotate: 60deg;
  --bounce-scale: 1;
}

@keyframes bounce-left-to-location {
  0% {
    transform: scale(0) translateX(-var(--bounce-translate-x));
    opacity: 0;
  }
  30% {
    transform: scale(calc(var(--bounce-scale) + 1)) translateX(calc(-0.5 * var(--bounce-translate-x)));
  }
  70% {
    transform: scale(1) translateX(calc(-0.1 * var(--bounce-translate-x)));
  }
  100% {
    transform: scale(1) translateX(0);
    opacity: 1;
  }
}

@keyframes bounce-right-to-location {
  0% {
    transform: scale(0) translateX(var(--bounce-translate-x));
    opacity: 0;
  }
  30% {
    transform: scale(calc(var(--bounce-scale) + 1)) translateX(calc(0.5 * var(--bounce-translate-x)));
  }
  70% {
    transform: scale(1) translateX(calc(0.1 * var(--bounce-translate-x)));
  }
  100% {
    transform: scale(1) translateX(0);
    opacity: 1;
  }
}

@keyframes bounce-top-to-location {
  0% {
    transform: scale(0) translateY(-var(--bounce-translate-x));
    opacity: 0;
  }
  30% {
    transform: scale(calc(var(--bounce-scale) + 1)) translateY(calc(-0.5 * var(--bounce-translate-x)));
  }
  70% {
    transform: scale(1) translateY(calc(-0.1 * var(--bounce-translate-x)));
  }
  100% {
    transform: scale(1) translateY(0);
    opacity: 1;
  }
}

@keyframes bounce-bottom-to-location {
  0% {
    transform: scale(0) translateY(var(--bounce-translate-x));
    opacity: 0;
  }
  30% {
    transform: scale(calc(var(--bounce-scale) + 1)) translateY(calc(0.5 * var(--bounce-translate-x)));
  }
  70% {
    transform: scale(1) translateY(calc(0.1 * var(--bounce-translate-x)));
  }
  100% {
    transform: scale(1) translateY(0);
    opacity: 1;
  }
}

@keyframes bounce-scale-x {
  0% {
    transform: scaleX(1);
  }
  $count: 6;
  $step: math.div(90, $count);
  $len: math.div(1, $count);

  @for $i from 1 through $count {
    #{$i * $step - math.div($step, 2)}% {
      transform: scaleX(calc($len * ($count - $i + 1) * var(--bounce-scale) + 1));
    }
    #{$i * $step}% {
      transform: scaleX(calc(-1 * $len * ($count - $i + 1) * var(--bounce-scale) + 1));
    }
  }
  100% {
    transform: scaleX(1);
  }
}

@keyframes bounce-scale-y {
  0% {
    transform: scaleY(1);
  }
  $count: 6;
  $step: math.div(90, $count);
  $len: math.div(1, $count);

  @for $i from 1 through $count {
    #{$i * $step - math.div($step, 2)}% {
      transform: scaleY(calc($len * ($count - $i + 1) * var(--bounce-scale) + 1));
    }
    #{$i * $step}% {
      transform: scaleY(calc(-1 * $len * ($count - $i + 1) * var(--bounce-scale) + 1));
    }
  }
  100% {
    transform: scaleY(1);
  }
}

@keyframes bounce-jump-top {
  $count: 6;
  $step: math.div(90, $count);
  $len: math.div(1, $count);

  @for $i from 1 through $count {
    #{($i - 1) * $step}% {
      transform: translateY(0);
    }
    #{$i * $step - math.div($step, 2)}% {
      transform: translateY(calc(-1 * $len * ($count - $i + 1) * var(--bounce-translate-y)));
    }
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes bounce-jump-bottom {
  $count: 6;
  $step: math.div(90, $count);
  $len: math.div(1, $count);

  @for $i from 1 through $count {
    #{($i - 1) * $step}% {
      transform: translateY(0);
    }
    #{$i * $step - math.div($step, 2)}% {
      transform: translateY(calc($len * ($count - $i + 1) * var(--bounce-translate-y)));
    }
  }
  100% {
    transform: translateY(0);
  }
}

@keyframes bounce-loop-spread {
  $count: 10;
  $step: math.div(100, $count);
  $len: math.div(1, $count);

  0% {
    transform: translateX(0);
  }
  @for $i from 1 through $count {
    #{$i * $step - math.div($step, 2)}% {
      transform: translateX(calc(-1 * $len * $i * var(--bounce-translate-x)));
    }
    #{$i * $step}% {
      transform: translateX(calc($len * $i * var(--bounce-translate-x)));
    }
  }
}

@keyframes bounce-loop-sink {
  $count: 9;
  $step: math.div(90, $count);
  $len: math.div(1, $count);

  0% {
    transform: translateX(0);
  }
  @for $i from 1 through $count {
    #{$i * $step - math.div($step, 2)}% {
      transform: translateX(calc(-1 * ($count - $i + 1) * $len * var(--bounce-translate-x)));
    }
    #{$i * $step}% {
      transform: translateX(calc(($count - $i + 1) * $len * var(--bounce-translate-x)));
    }
  }
  0% {
    transform: translateX(0);
  }
}

@keyframes bounce-shake-spread {
  $count: 10;
  $step: math.div(100, $count);
  $len: math.div(1, $count);

  0% {
    transform: rotateZ(0);
  }
  @for $i from 1 through $count {
    #{$i * $step - math.div($step, 2)}% {
      transform: rotateZ(calc(-1 * $i * $len * var(--bounce-rotate)));
    }
    #{$i * $step}% {
      transform: rotateZ(calc($i * $len * var(--bounce-rotate)));
    }
  }
}

@keyframes bounce-shake-sink {
  $count: 9;
  $step: math.div(90, $count);
  $len: math.div(1, $count);

  0% {
    transform: rotateZ(0);
  }
  @for $i from 1 through $count {
    #{$i * $step - math.div($step, 2)}% {
      transform: rotateZ(calc(-1 * ($count - $i + 1) * $len * var(--bounce-rotate)));
    }
    #{$i * $step}% {
      transform: rotateZ(calc(($count - $i + 1) * $len * var(--bounce-rotate)));
    }
  }
  100% {
    transform: rotateZ(0);
  }
}
